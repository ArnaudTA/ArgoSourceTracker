basePath: /
definitions:
  server.Check:
    properties:
      status:
        type: string
    required:
      - status
    type: object
  types.AppStats:
    additionalProperties:
      type: integer
    type: object
  types.ApplicationStatus:
    enum:
      - Up-to-date
      - Ignored
      - Outdated
      - Error
    type: string
    x-enum-varnames:
      - UpToDate
      - Ignored
      - Outdated
      - Error
  types.ChartSummary:
    properties:
      chart:
        type: string
      error:
        type: string
      newTags:
        items:
          type: string
        type: array
      repoURL:
        type: string
      revision:
        type: string
      status:
        $ref: "#/definitions/types.ApplicationStatus"
      type:
        type: string
    required:
      - chart
    type: object
  types.ListApplicationRes:
    properties:
      items:
        items:
          $ref: "#/definitions/types.Summary"
        type: array
      stats:
        $ref: "#/definitions/types.AppStats"
    required:
      - items
      - stats
    type: object
  types.Parent:
    properties:
      applicationUrl:
        type: string
      errorMessage:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
    required:
      - kind
      - name
      - namespace
    type: object
  types.Summary:
    properties:
      applicationUrl:
        type: string
      charts:
        items:
          $ref: "#/definitions/types.ChartSummary"
        type: array
      instance:
        type: string
      name:
        type: string
      namespace:
        type: string
      status:
        $ref: "#/definitions/types.ApplicationStatus"
    required:
      - applicationUrl
      - charts
      - instance
      - name
      - namespace
      - status
    type: object
info:
  contact: {}
  description:
    API simple pour lister les applications ArgoCD et suivre les versions
    des charts
  title: ChartSentinel API
  version: "1.0"
paths:
  /api/v1/apps:
    get:
      description: Retourne la liste des applications et le rapport des versions
      parameters:
        - description: Name to search
          in: query
          name: name
          type: string
        - description: "Number of elements to skip, default: 0"
          in: query
          name: offset
          type: integer
        - description: "Number of elements to return, default: 10"
          in: query
          name: limit
          type: integer
        - description: Filtre les applications
          in: query
          name: filter
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.ListApplicationRes"
      summary: Liste les applications
      tags:
        - Applications
  /api/v1/apps/{namespace}/{name}:
    get:
      description: Retourne application et le rapport de versions
      parameters:
        - description: Application cible
          in: path
          name: name
          required: true
          type: string
        - description: Namespace cible
          in: path
          name: namespace
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          headers:
            x-offset:
              description: Return the offset you provided
              type: string
            x-total:
              description: Total of items available
              type: string
          schema:
            $ref: "#/definitions/types.Summary"
      summary: Récupe une application
      tags:
        - Applications
  /api/v1/apps/{namespace}/{name}/origin:
    get:
      description: Liste les applications et applications qui ménent à cette application
      parameters:
        - description: Application cible
          in: path
          name: name
          required: true
          type: string
        - description: Namespace cible
          in: path
          name: namespace
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/types.Parent"
            type: array
        "400":
          description: Bad Request
          schema: {}
      summary: Remonte l'origine d'une application
      tags:
        - Track Origin
  /api/v1/health:
    get:
      description: Retourne le status de l'application
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/server.Check"
      summary: Status
      tags:
        - Healthcheck
swagger: "2.0"
