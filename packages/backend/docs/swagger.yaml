basePath: /
definitions:
  application.ApplicationStatus:
    enum:
    - Up-to-date
    - Unknown
    - Outdated
    - Ignored
    - Checking
    - Error
    type: string
    x-enum-varnames:
    - UpToDate
    - Unknown
    - Outdated
    - Ignored
    - Checking
    - Error
  application.ApplicationSummary:
    properties:
      applicationUrl:
        type: string
      charts:
        items:
          $ref: '#/definitions/application.ChartSummary'
        type: array
      instance:
        type: string
      name:
        type: string
      namespace:
        type: string
      status:
        $ref: '#/definitions/application.ApplicationStatus'
    required:
    - applicationUrl
    - charts
    - instance
    - name
    - namespace
    - status
    type: object
  application.ChartSummary:
    properties:
      chart:
        type: string
      newTags:
        items:
          type: string
        type: array
      repoURL:
        type: string
      revision:
        type: string
      status:
        type: string
      type:
        type: string
    required:
    - chart
    type: object
  application.GenealogyItem:
    properties:
      applicationUrl:
        type: string
      errorMessage:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
    required:
    - kind
    - name
    - namespace
    type: object
  server.Check:
    properties:
      status:
        type: string
    required:
    - status
    type: object
info:
  contact: {}
  description: API simple pour lister les applications ArgoCD et suivre les versions
    des charts
  title: ArgoSourceTracker API
  version: "1.0"
paths:
  /api/v1/apps:
    get:
      description: Retourne la liste des applications et le rapport des versions
      parameters:
      - description: Name to search
        in: query
        name: name
        type: string
      - description: Filtre les applications
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/application.ApplicationSummary'
            type: array
      summary: Liste les applications
      tags:
      - Applications
  /api/v1/apps/{namespace}/{name}:
    get:
      description: Retourne application et le rapport de versions
      parameters:
      - description: Application cible
        in: path
        name: name
        required: true
        type: string
      - description: Namespace cible
        in: path
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/application.ApplicationSummary'
      summary: Récupe une application
      tags:
      - Applications
  /api/v1/apps/{namespace}/{name}/origin:
    get:
      description: Liste les applications et applications qui ménent à cette application
      parameters:
      - description: Application cible
        in: path
        name: name
        required: true
        type: string
      - description: Namespace cible
        in: path
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/application.GenealogyItem'
            type: array
        "400":
          description: Bad Request
          schema: {}
      summary: Remonte l'origine d'une application
      tags:
      - Track Origin
  /api/v1/health:
    get:
      description: Retourne le status de l'application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.Check'
      summary: Status
      tags:
      - Healthcheck
swagger: "2.0"
